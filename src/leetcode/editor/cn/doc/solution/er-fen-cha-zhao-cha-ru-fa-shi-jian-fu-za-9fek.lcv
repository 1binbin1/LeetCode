* []

```java
class Solution {
    public int[][] mergeArrays(int[][] nums1, int[][] nums2) {
        //转换为短数组插入长的数组
        if(nums2.length>nums1.length){
            return mergeArrays(nums2,nums1);
        }
        int left = 0;
        //二分法查找插入的位置，查找到则加数值，没有则插入
        for(int i = 0; i<nums2.length; i++){
            //每次循环初始化右侧下标
            int right = nums1.length;
            //二分法查找
            while(right!=left){
                int index = (right-left)/2+left;
                if(nums2[i][0]>nums1[index][0]){
                    left=index+1;
                }else if(nums2[i][0]<nums1[index][0]){
                    right=index;
                }else{
                    nums1[index][1]+=nums2[i][1];
                    left = index;
                    break;
                }
            }
            if(left==right){
            //将nums1中插入不存在的id对应的数值
                nums1=extendArr(nums1, left, nums2[i][0], nums2[i][1]);
            }
        }
        return nums1;
    }
    //插入对应的位置并返回
    public int[][] extendArr(int[][] nums1, int index, int id, int value ){
        int[][] nums = new int[nums1.length+1][2];
        for(int i = 0; i<nums.length; i++){
            if(i<index){
                nums[i][0]=nums1[i][0];
                nums[i][1]=nums1[i][1];
            }else if(i==index){
                nums[i][0]=id;
                nums[i][1]=value;
            }else{
                nums[i][0]=nums1[i-1][0];
                nums[i][1]=nums1[i-1][1];
            }
        }
        return nums;
    }
}
```

